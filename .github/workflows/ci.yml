name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run type-check

      - name: Run tests
        run: npm run test:coverage

      - name: Check test coverage
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            COVERAGE=$(node -p "
              const fs = require('fs');
              const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
              coverage.total.lines.pct;
            ")
            echo "Test coverage: $COVERAGE%"
            if [ $(echo "$COVERAGE < 75" | bc -l) -eq 1 ]; then
              echo "❌ Test coverage ($COVERAGE%) is below required 75%"
              exit 1
            else
              echo "✅ Test coverage ($COVERAGE%) meets the 75% requirement"
            fi
          else
            echo "❌ Coverage file not found"
            exit 1
          fi

      - name: Build application
        run: npm run build

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next/
